/*
 * GL04ModelTransform.cpp: Model Transform - Translation and Rotation
 * Transform primitives from their model spaces to world space.
 */
#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include <stdlib.h>

static float	tx	=  10.0;
static float	ty	=  0.0;

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);

	glPushMatrix();
	glColor3f(1.0, 1.0, 1.0);
	glTranslatef(tx,ty,0);
	glRectf(-25.0, -25.0, 25.0, 25.0);
	glPopMatrix();

	glFlush();
}



void init(void)
{
	glClearColor (1.0, 0.0, 0.0, 0.0);
	glOrtho(-80.0, 80.0, -80.0, 80.0, -1.0, 1.0);
}

void spe_key(int key, int x, int y)
{

	switch (key) {

		case GLUT_KEY_LEFT:
				tx -=5;
				glutPostRedisplay();
				break;

		case GLUT_KEY_RIGHT:
				tx +=5;
				glutPostRedisplay();
				break;

        default:
			break;
	}
}




int main()
{
	glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize (250, 250);
	glutInitWindowPosition (100, 100);
	glutCreateWindow ("Translation and Mouse Functions");
	init();

	glutDisplayFunc(display);
	glutSpecialFunc(spe_key);
	glutMainLoop();
	return 0;   /* ANSI C requires main to return int. */
}

