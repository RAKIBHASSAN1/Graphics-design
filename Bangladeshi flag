#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, includes glu.h and gl.h
#include<math.h>

//<<<<<<<<<<<<<<<<<<<<<<< myInit >>>>>>>>>>>>>>>>>>>>
void myInit(void)
{
glClearColor(1.0,1.0,1.0,0.0); // set white background color
glColor3f(0.0f, 0.0f, 0.0f); // set the drawing color
glPointSize(0.5); // a ‘dot’ is 4 by 4 pixels
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0.0, 640.0, 0.0, 480.0);
}

void myDisplay(void)
{
float ss;
glClear(GL_COLOR_BUFFER_BIT); // clear the screen
glBegin(GL_QUADS);
        glColor3f(0,.4,0);
        glVertex2f(0.5,0.30);
        glVertex2f(-0.5,0.30);
        glVertex2f(-0.5,-0.30);
         glVertex2f(0.5,-0.30);
glEnd();

glBegin(GL_POLYGON);
 glColor3f(1,0,0);
    for(int i=0;i<360;i++)
    {
        ss=i*3.142/180;
        glVertex2f(0.1*cos(ss),0.15*sin(ss));
    }
glEnd();

glFlush(); // send all output to display
}
//<<<<<<<<<<<<<<<<<<<<<<<< main >>>>>>>>>>>>>>>>>>>>>>
int main(int argc, char** argv)
{
glutInit(&argc, argv); // initialize the toolkit
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); // set display mode
glutInitWindowSize(1000,1000); // set window size
glutInitWindowPosition(10, 10); // set window position on screen
glutCreateWindow("Drawing flag"); // open the screen window
glutDisplayFunc(myDisplay); // register redraw function
//myInit();
glutMainLoop(); // go into a perpetual loop
return 0;
}
